{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Data Analysis\"\n",
        "subtitle: \"Comprehensive Data Cleaning & Exploratory Analysis of Job Market Trends\"\n",
        "author:\n",
        "  - name: Norah Jones\n",
        "    affiliations:\n",
        "      - id: bu\n",
        "        name: Boston University\n",
        "        city: Boston\n",
        "        state: MA\n",
        "  - name: John Hamm\n",
        "    affiliations:\n",
        "      - ref: bu\n",
        "bibliography: references.bib\n",
        "csl: csl/econometrica.csl\n",
        "format: \n",
        "  html:\n",
        "    toc: true\n",
        "    number-sections: true\n",
        "    df-print: paged\n",
        "---"
      ],
      "id": "5604df8a"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Load dataset (correct path syntax)\n",
        "data = pd.read_csv(r\"C:\\Users\\pooja\\Desktop\\Repositories\\ad688-employability-sp25A1-pooja\\lightcast_job_postings.csv\")\n",
        "\n",
        "# Drop any missing values just in case\n",
        "pdf = data[[\"NAICS2_NAME\", \"SALARY_FROM\"]].dropna()\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.boxplot(data=pdf, x=\"NAICS2_NAME\", y=\"SALARY_FROM\", color=\"#636EFA\")\n",
        "\n",
        "# Add labels and title\n",
        "plt.title(\"Salary Distribution by Industry\", fontsize=16, fontname=\"Arial\")\n",
        "plt.xlabel(\"Industry\", fontsize=12)\n",
        "plt.ylabel(\"Starting Salary\", fontsize=12)\n",
        "plt.xticks(rotation=45)\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show plot\n",
        "plt.show()\n",
        "\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# Load dataset (correct path syntax)\n",
        "data = pd.read_csv(r\"C:\\Users\\pooja\\Desktop\\Repositories\\ad688-employability-sp25A1-pooja\\lightcast_job_postings.csv\")\n",
        "\n",
        "# Drop missing values\n",
        "pdf = data[[\"NAICS2_NAME\", \"SALARY_FROM\"]].dropna()\n",
        "\n",
        "# Group by industry and calculate average salary\n",
        "avg_salary = pdf.groupby(\"NAICS2_NAME\", as_index=False)[\"SALARY_FROM\"].mean()\n",
        "\n",
        "# Sort industries by average salary (optional)\n",
        "avg_salary = avg_salary.sort_values(by=\"SALARY_FROM\", ascending=False)\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.barplot(data=avg_salary, x=\"NAICS2_NAME\", y=\"SALARY_FROM\", color=\"#636EFA\")\n",
        "\n",
        "# Customize\n",
        "plt.title(\"Average Starting Salary by Industry\", fontsize=16, fontname=\"Arial\")\n",
        "plt.xlabel(\"Industry\", fontsize=12)\n",
        "plt.ylabel(\"Average Starting Salary\", fontsize=12)\n",
        "plt.xticks(rotation=45, ha='right')\n",
        "plt.tight_layout()\n",
        "\n",
        "# Show plot\n",
        "plt.show()\n",
        "\n",
        "# Remote Vs On-site Job Posting\n",
        "\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "# Step 1: Load the dataset (update path as needed)\n",
        "df = pd.read_csv(r\"C:\\Users\\pooja\\Desktop\\Repositories\\ad688-employability-sp25A1-pooja\\lightcast_job_postings.csv\")\n",
        "\n",
        "# Step 2: Select and clean the relevant column\n",
        "pdf = df[[\"REMOTE_TYPE_NAME\"]].dropna()\n",
        "\n",
        "# Step 3: Count occurrences of each remote type\n",
        "remote_type_counts = pdf[\"REMOTE_TYPE_NAME\"].value_counts().reset_index()\n",
        "remote_type_counts.columns = [\"REMOTE_TYPE_NAME\", \"Job Count\"]\n",
        "\n",
        "# Step 4: Create pie chart using matplotlib\n",
        "plt.figure(figsize=(8, 8))\n",
        "plt.pie(\n",
        "    remote_type_counts[\"Job Count\"],\n",
        "    labels=remote_type_counts[\"REMOTE_TYPE_NAME\"],\n",
        "    autopct='%1.1f%%',\n",
        "    startangle=140,\n",
        "    colors=plt.cm.Set2.colors  # Optional color palette\n",
        ")\n",
        "\n",
        "# Step 5: Add title and format\n",
        "plt.title(\"Remote vs On-Site Job Postings\", fontsize=16, fontname=\"Arial\")\n",
        "plt.axis(\"equal\")  # Ensures the pie chart is circular\n",
        "\n",
        "# Step 6: Show plot\n",
        "plt.show()\n",
        "\n",
        "df.columns\n",
        "\n",
        "column_list = df.columns.tolist()\n",
        "print(column_list)\n",
        "\n",
        "\n",
        "# Bar Plot – Average Salary: AI vs. Non-AI Career\n",
        "\n",
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "df = pd.read_csv(r\"C:\\Users\\pooja\\Desktop\\Repositories\\ad688-employability-sp25A1-pooja\\lightcast_job_postings.csv\")\n",
        "\n",
        "# Filter AI-related jobs\n",
        "df['IS_AI_JOB'] = df['TITLE_NAME'].str.contains(\"AI|Artificial Intelligence|Machine Learning|Data Scientist\", case=False, na=False)\n",
        "\n",
        "# Group by AI vs. Non-AI and calculate average salary\n",
        "salary_compare = df[df[\"SALARY_FROM\"].notna()].groupby(\"IS_AI_JOB\")[\"SALARY_FROM\"].mean().reset_index()\n",
        "salary_compare[\"Category\"] = salary_compare[\"IS_AI_JOB\"].map({True: \"AI Careers\", False: \"Non-AI Careers\"})\n",
        "\n",
        "# Plot\n",
        "plt.figure(figsize=(8, 6))\n",
        "barplot = sns.barplot(data=salary_compare, x=\"Category\", y=\"SALARY_FROM\", palette=[\"#cdb4db\", \"#fcbf49\"])\n",
        "\n",
        "# Add numbers on top of bars\n",
        "for i, row in salary_compare.iterrows():\n",
        "    barplot.text(\n",
        "        i, \n",
        "        row[\"SALARY_FROM\"] + 1000,  # Slightly above the bar\n",
        "        f\"${row['SALARY_FROM']:.0f}\", \n",
        "        ha='center', \n",
        "        va='bottom', \n",
        "        fontsize=12, \n",
        "        fontweight='bold'\n",
        "    )\n",
        "\n",
        "# Customize plot\n",
        "plt.title(\"Average Salary: AI vs. Non-AI Careers\", fontsize=16)\n",
        "plt.ylabel(\"Average Salary\")\n",
        "plt.xlabel(\"\")\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# Bar Plot – Top Regions by AI Salary\n",
        "\n",
        "# Filter AI jobs and drop missing salary/state\n",
        "ai_jobs = df[df[\"IS_AI_JOB\"] & df[\"SALARY_FROM\"].notna() & df[\"STATE_NAME\"].notna()]\n",
        "\n",
        "# Group and get top 10 states by average salary\n",
        "top_states = ai_jobs.groupby(\"STATE_NAME\")[\"SALARY_FROM\"].mean().sort_values(ascending=False).head(10).reset_index()\n",
        "\n",
        "# Plot\n",
        "sns.barplot(data=top_states, x=\"SALARY_FROM\", y=\"STATE_NAME\", palette=\"viridis\")\n",
        "plt.title(\"Top 10 States by Average AI Job Salary\")\n",
        "plt.xlabel(\"Average Salary\")\n",
        "plt.ylabel(\"State\")\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# Box Plot – Salary Distribution by Region (AI vs. Non-AI)\n",
        "\n",
        "df_filtered = df[df[\"SALARY_FROM\"].notna() & df[\"STATE_NAME\"].notna()]\n",
        "df_filtered[\"Job Type\"] = df_filtered[\"IS_AI_JOB\"].map({True: \"AI\", False: \"Non-AI\"})\n",
        "\n",
        "plt.figure(figsize=(12, 6))\n",
        "sns.boxplot(data=df_filtered, x=\"STATE_NAME\", y=\"SALARY_FROM\", hue=\"Job Type\")\n",
        "plt.xticks(rotation=45)\n",
        "plt.title(\"Salary Distribution by State (AI vs. Non-AI Careers)\")\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "# Histogram – Salary Range Distribution (AI vs. Non-AI)\n",
        "\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.histplot(data=df_filtered, x=\"SALARY_FROM\", hue=\"Job Type\", bins=30, kde=True, element=\"step\")\n",
        "plt.title(\"Salary Distribution: AI vs. Non-AI Careers\")\n",
        "plt.xlabel(\"Starting Salary\")\n",
        "plt.tight_layout()\n",
        "plt.show()\n",
        "\n",
        "#  Pie Chart – Proportion of AI vs. Non-AI Jobs in Dataset\n",
        "\n",
        "job_counts = df[\"IS_AI_JOB\"].value_counts().reset_index()\n",
        "job_counts.columns = [\"IS_AI_JOB\", \"Count\"]\n",
        "job_counts[\"Category\"] = job_counts[\"IS_AI_JOB\"].map({True: \"AI Careers\", False: \"Non-AI Careers\"})\n",
        "\n",
        "plt.pie(job_counts[\"Count\"], labels=job_counts[\"Category\"], autopct='%1.1f%%', startangle=140, colors=plt.cm.Set2.colors)\n",
        "plt.axis(\"equal\")\n",
        "plt.title(\"AI vs. Non-AI Job Proportion\")\n",
        "plt.show()\n"
      ],
      "id": "88f681ee",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\pooja\\AppData\\Roaming\\Python\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}