[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "ad688-employability-sp25A1-pooja",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#research-rationale",
    "href": "index.html#research-rationale",
    "title": "ad688-employability-sp25A1-pooja",
    "section": "Research Rationale",
    "text": "Research Rationale\nThis topic is of high relevance due to the growing disparity in income levels between emerging tech roles and traditional careers. As organizations increasingly invest in AI-driven solutions, professionals with specialized skills in AI and data science are commanding significantly higher salaries, which may influence the career choices of new graduates and mid-career professionals alike. Understanding these salary differentials helps educational institutions, employers, and job seekers align their strategies with market demands. Additionally, insights into regional salary variations and the remote work premium (or lack thereof) are valuable for businesses planning talent acquisition and for professionals considering relocation or remote opportunities.\nStudying salary and compensation trends in 2024 also provides a snapshot of the economic and technological forces shaping the labor market. With the rapid pace of innovation, industries such as tech, renewable energy, and healthcare have seen notable wage growth, while others have lagged behind. By analyzing compensation patterns, this research aims to uncover not only where the money is but also what factors are driving wage growth—be it skill scarcity, location independence, or sector-specific expansion. The expected findings will likely reflect a premium on AI expertise, continued regional disparities favoring tech hubs, and a growing acceptance of remote work as a viable, and potentially lucrative, employment model."
  },
  {
    "objectID": "index.html#literature-review",
    "href": "index.html#literature-review",
    "title": "ad688-employability-sp25A1-pooja",
    "section": "Literature Review",
    "text": "Literature Review\nRecent studies indicate a significant salary gap between AI and non-AI roles, with AI professionals—particularly those skilled in machine learning, data science, and NLP—earning higher-than-average wages. According to LinkedIn and Glassdoor data, roles such as AI engineers and data scientists command salaries often 20–40% higher than software developers or IT generalists. Research by the World Economic Forum (2024) confirms that AI roles are among the top-paying across sectors due to their scarcity and high demand. In contrast, traditional roles in administration or customer service have seen slower growth or wage stagnation.\nGeographically, the United States, Western Europe, and parts of Asia (especially Singapore and India’s tech hubs) offer top salaries in AI-related careers. Cities like San Francisco, London, and Bangalore have become salary hotspots due to tech industry concentration. Simultaneously, a growing body of research, including reports by PwC and Deloitte, shows that remote work has begun to close salary gaps between high-cost and low-cost regions, sometimes even offering a premium for hard-to-source skills. Meanwhile, industries such as tech, healthcare, and green energy saw the highest wage growth in 2024, driven by digital transformation, increased health demands, and climate-conscious innovation. The impact of AI on job security has been widely discussed in recent years @smith2023ai."
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "ad688-employability-sp25A1-pooja",
    "section": "Introduction",
    "text": "Introduction\nIn today’s rapidly evolving job market, salary and compensation trends offer critical insights into the shifting value of skills, roles, and industries. The growth of artificial intelligence (AI) has created new high-demand career paths, prompting comparisons between the earning potential of AI-related and traditional non-AI roles. At the same time, global economic shifts, inflation, technological disruptions, and changing work models—especially remote work—are transforming how, where, and why people are paid. As job seekers, employers, and policymakers navigate this dynamic landscape, understanding where the highest-paying opportunities lie and what industries are driving wage growth becomes essential.\nIn 2024, several trends make this a particularly important area of study. First, the continued integration of AI across sectors has widened the salary gap between tech-enabled and conventional jobs. Second, remote work has become more mainstream, raising questions about how location influences pay. Finally, macroeconomic factors like post-pandemic recovery, digital transformation, and climate-conscious business practices have pushed wage growth in some industries more than others. By analyzing these factors, this study seeks to uncover how salaries differ between AI and non-AI careers, identify top-paying regions, compare remote vs. in-office compensation, and highlight industries with the most significant wage increases in 2024."
  },
  {
    "objectID": "eda.html",
    "href": "eda.html",
    "title": "1. AI vs. Non-AI Salary Comparison",
    "section": "",
    "text": "import pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Load dataset (correct path syntax)\ndata = pd.read_csv(r\"C:\\Users\\pooja\\Desktop\\Repositories\\ad688-employability-sp25A1-pooja\\lightcast_job_postings.csv\")\n\ndata.head()\n\n\n\n\n\n\n\n\nID\nLAST_UPDATED_DATE\nLAST_UPDATED_TIMESTAMP\nDUPLICATES\nPOSTED\nEXPIRED\nDURATION\nSOURCE_TYPES\nSOURCES\nURL\n...\nNAICS_2022_2\nNAICS_2022_2_NAME\nNAICS_2022_3\nNAICS_2022_3_NAME\nNAICS_2022_4\nNAICS_2022_4_NAME\nNAICS_2022_5\nNAICS_2022_5_NAME\nNAICS_2022_6\nNAICS_2022_6_NAME\n\n\n\n\n0\n1f57d95acf4dc67ed2819eb12f049f6a5c11782c\n2024-09-06\n2024-09-06 20:32:57.352 Z\n0\n2024-06-02\n2024-06-08\n6.0\n[\\n \"Company\"\\n]\n[\\n \"brassring.com\"\\n]\n[\\n \"https://sjobs.brassring.com/TGnewUI/Sear...\n...\n44\nRetail Trade\n441\nMotor Vehicle and Parts Dealers\n4413\nAutomotive Parts, Accessories, and Tire Retailers\n44133\nAutomotive Parts and Accessories Retailers\n441330\nAutomotive Parts and Accessories Retailers\n\n\n1\n0cb072af26757b6c4ea9464472a50a443af681ac\n2024-08-02\n2024-08-02 17:08:58.838 Z\n0\n2024-06-02\n2024-08-01\nNaN\n[\\n \"Job Board\"\\n]\n[\\n \"maine.gov\"\\n]\n[\\n \"https://joblink.maine.gov/jobs/1085740\"\\n]\n...\n56\nAdministrative and Support and Waste Managemen...\n561\nAdministrative and Support Services\n5613\nEmployment Services\n56132\nTemporary Help Services\n561320\nTemporary Help Services\n\n\n2\n85318b12b3331fa490d32ad014379df01855c557\n2024-09-06\n2024-09-06 20:32:57.352 Z\n1\n2024-06-02\n2024-07-07\n35.0\n[\\n \"Job Board\"\\n]\n[\\n \"dejobs.org\"\\n]\n[\\n \"https://dejobs.org/dallas-tx/data-analys...\n...\n52\nFinance and Insurance\n524\nInsurance Carriers and Related Activities\n5242\nAgencies, Brokerages, and Other Insurance Rela...\n52429\nOther Insurance Related Activities\n524291\nClaims Adjusting\n\n\n3\n1b5c3941e54a1889ef4f8ae55b401a550708a310\n2024-09-06\n2024-09-06 20:32:57.352 Z\n1\n2024-06-02\n2024-07-20\n48.0\n[\\n \"Job Board\"\\n]\n[\\n \"disabledperson.com\",\\n \"dejobs.org\"\\n]\n[\\n \"https://www.disabledperson.com/jobs/5948...\n...\n52\nFinance and Insurance\n522\nCredit Intermediation and Related Activities\n5221\nDepository Credit Intermediation\n52211\nCommercial Banking\n522110\nCommercial Banking\n\n\n4\ncb5ca25f02bdf25c13edfede7931508bfd9e858f\n2024-06-19\n2024-06-19 07:00:00.000 Z\n0\n2024-06-02\n2024-06-17\n15.0\n[\\n \"FreeJobBoard\"\\n]\n[\\n \"craigslist.org\"\\n]\n[\\n \"https://modesto.craigslist.org/sls/77475...\n...\n99\nUnclassified Industry\n999\nUnclassified Industry\n9999\nUnclassified Industry\n99999\nUnclassified Industry\n999999\nUnclassified Industry\n\n\n\n\n5 rows × 131 columns\nprint(data.columns)\n\nIndex(['ID', 'LAST_UPDATED_DATE', 'LAST_UPDATED_TIMESTAMP', 'DUPLICATES',\n       'POSTED', 'EXPIRED', 'DURATION', 'SOURCE_TYPES', 'SOURCES', 'URL',\n       ...\n       'NAICS_2022_2', 'NAICS_2022_2_NAME', 'NAICS_2022_3',\n       'NAICS_2022_3_NAME', 'NAICS_2022_4', 'NAICS_2022_4_NAME',\n       'NAICS_2022_5', 'NAICS_2022_5_NAME', 'NAICS_2022_6',\n       'NAICS_2022_6_NAME'],\n      dtype='object', length=131)\nprint(data.columns.to_list)\n\n&lt;bound method IndexOpsMixin.tolist of Index(['ID', 'LAST_UPDATED_DATE', 'LAST_UPDATED_TIMESTAMP', 'DUPLICATES',\n       'POSTED', 'EXPIRED', 'DURATION', 'SOURCE_TYPES', 'SOURCES', 'URL',\n       ...\n       'NAICS_2022_2', 'NAICS_2022_2_NAME', 'NAICS_2022_3',\n       'NAICS_2022_3_NAME', 'NAICS_2022_4', 'NAICS_2022_4_NAME',\n       'NAICS_2022_5', 'NAICS_2022_5_NAME', 'NAICS_2022_6',\n       'NAICS_2022_6_NAME'],\n      dtype='object', length=131)&gt;\nprint(', '.join(data.columns))\nprint(data.columns.tolist())\nprint(data.columns.values.tolist())\n\nID, LAST_UPDATED_DATE, LAST_UPDATED_TIMESTAMP, DUPLICATES, POSTED, EXPIRED, DURATION, SOURCE_TYPES, SOURCES, URL, ACTIVE_URLS, ACTIVE_SOURCES_INFO, TITLE_RAW, BODY, MODELED_EXPIRED, MODELED_DURATION, COMPANY, COMPANY_NAME, COMPANY_RAW, COMPANY_IS_STAFFING, EDUCATION_LEVELS, EDUCATION_LEVELS_NAME, MIN_EDULEVELS, MIN_EDULEVELS_NAME, MAX_EDULEVELS, MAX_EDULEVELS_NAME, EMPLOYMENT_TYPE, EMPLOYMENT_TYPE_NAME, MIN_YEARS_EXPERIENCE, MAX_YEARS_EXPERIENCE, IS_INTERNSHIP, SALARY, REMOTE_TYPE, REMOTE_TYPE_NAME, ORIGINAL_PAY_PERIOD, SALARY_TO, SALARY_FROM, LOCATION, CITY, CITY_NAME, COUNTY, COUNTY_NAME, MSA, MSA_NAME, STATE, STATE_NAME, COUNTY_OUTGOING, COUNTY_NAME_OUTGOING, COUNTY_INCOMING, COUNTY_NAME_INCOMING, MSA_OUTGOING, MSA_NAME_OUTGOING, MSA_INCOMING, MSA_NAME_INCOMING, NAICS2, NAICS2_NAME, NAICS3, NAICS3_NAME, NAICS4, NAICS4_NAME, NAICS5, NAICS5_NAME, NAICS6, NAICS6_NAME, TITLE, TITLE_NAME, TITLE_CLEAN, SKILLS, SKILLS_NAME, SPECIALIZED_SKILLS, SPECIALIZED_SKILLS_NAME, CERTIFICATIONS, CERTIFICATIONS_NAME, COMMON_SKILLS, COMMON_SKILLS_NAME, SOFTWARE_SKILLS, SOFTWARE_SKILLS_NAME, ONET, ONET_NAME, ONET_2019, ONET_2019_NAME, CIP6, CIP6_NAME, CIP4, CIP4_NAME, CIP2, CIP2_NAME, SOC_2021_2, SOC_2021_2_NAME, SOC_2021_3, SOC_2021_3_NAME, SOC_2021_4, SOC_2021_4_NAME, SOC_2021_5, SOC_2021_5_NAME, LOT_CAREER_AREA, LOT_CAREER_AREA_NAME, LOT_OCCUPATION, LOT_OCCUPATION_NAME, LOT_SPECIALIZED_OCCUPATION, LOT_SPECIALIZED_OCCUPATION_NAME, LOT_OCCUPATION_GROUP, LOT_OCCUPATION_GROUP_NAME, LOT_V6_SPECIALIZED_OCCUPATION, LOT_V6_SPECIALIZED_OCCUPATION_NAME, LOT_V6_OCCUPATION, LOT_V6_OCCUPATION_NAME, LOT_V6_OCCUPATION_GROUP, LOT_V6_OCCUPATION_GROUP_NAME, LOT_V6_CAREER_AREA, LOT_V6_CAREER_AREA_NAME, SOC_2, SOC_2_NAME, SOC_3, SOC_3_NAME, SOC_4, SOC_4_NAME, SOC_5, SOC_5_NAME, LIGHTCAST_SECTORS, LIGHTCAST_SECTORS_NAME, NAICS_2022_2, NAICS_2022_2_NAME, NAICS_2022_3, NAICS_2022_3_NAME, NAICS_2022_4, NAICS_2022_4_NAME, NAICS_2022_5, NAICS_2022_5_NAME, NAICS_2022_6, NAICS_2022_6_NAME\n['ID', 'LAST_UPDATED_DATE', 'LAST_UPDATED_TIMESTAMP', 'DUPLICATES', 'POSTED', 'EXPIRED', 'DURATION', 'SOURCE_TYPES', 'SOURCES', 'URL', 'ACTIVE_URLS', 'ACTIVE_SOURCES_INFO', 'TITLE_RAW', 'BODY', 'MODELED_EXPIRED', 'MODELED_DURATION', 'COMPANY', 'COMPANY_NAME', 'COMPANY_RAW', 'COMPANY_IS_STAFFING', 'EDUCATION_LEVELS', 'EDUCATION_LEVELS_NAME', 'MIN_EDULEVELS', 'MIN_EDULEVELS_NAME', 'MAX_EDULEVELS', 'MAX_EDULEVELS_NAME', 'EMPLOYMENT_TYPE', 'EMPLOYMENT_TYPE_NAME', 'MIN_YEARS_EXPERIENCE', 'MAX_YEARS_EXPERIENCE', 'IS_INTERNSHIP', 'SALARY', 'REMOTE_TYPE', 'REMOTE_TYPE_NAME', 'ORIGINAL_PAY_PERIOD', 'SALARY_TO', 'SALARY_FROM', 'LOCATION', 'CITY', 'CITY_NAME', 'COUNTY', 'COUNTY_NAME', 'MSA', 'MSA_NAME', 'STATE', 'STATE_NAME', 'COUNTY_OUTGOING', 'COUNTY_NAME_OUTGOING', 'COUNTY_INCOMING', 'COUNTY_NAME_INCOMING', 'MSA_OUTGOING', 'MSA_NAME_OUTGOING', 'MSA_INCOMING', 'MSA_NAME_INCOMING', 'NAICS2', 'NAICS2_NAME', 'NAICS3', 'NAICS3_NAME', 'NAICS4', 'NAICS4_NAME', 'NAICS5', 'NAICS5_NAME', 'NAICS6', 'NAICS6_NAME', 'TITLE', 'TITLE_NAME', 'TITLE_CLEAN', 'SKILLS', 'SKILLS_NAME', 'SPECIALIZED_SKILLS', 'SPECIALIZED_SKILLS_NAME', 'CERTIFICATIONS', 'CERTIFICATIONS_NAME', 'COMMON_SKILLS', 'COMMON_SKILLS_NAME', 'SOFTWARE_SKILLS', 'SOFTWARE_SKILLS_NAME', 'ONET', 'ONET_NAME', 'ONET_2019', 'ONET_2019_NAME', 'CIP6', 'CIP6_NAME', 'CIP4', 'CIP4_NAME', 'CIP2', 'CIP2_NAME', 'SOC_2021_2', 'SOC_2021_2_NAME', 'SOC_2021_3', 'SOC_2021_3_NAME', 'SOC_2021_4', 'SOC_2021_4_NAME', 'SOC_2021_5', 'SOC_2021_5_NAME', 'LOT_CAREER_AREA', 'LOT_CAREER_AREA_NAME', 'LOT_OCCUPATION', 'LOT_OCCUPATION_NAME', 'LOT_SPECIALIZED_OCCUPATION', 'LOT_SPECIALIZED_OCCUPATION_NAME', 'LOT_OCCUPATION_GROUP', 'LOT_OCCUPATION_GROUP_NAME', 'LOT_V6_SPECIALIZED_OCCUPATION', 'LOT_V6_SPECIALIZED_OCCUPATION_NAME', 'LOT_V6_OCCUPATION', 'LOT_V6_OCCUPATION_NAME', 'LOT_V6_OCCUPATION_GROUP', 'LOT_V6_OCCUPATION_GROUP_NAME', 'LOT_V6_CAREER_AREA', 'LOT_V6_CAREER_AREA_NAME', 'SOC_2', 'SOC_2_NAME', 'SOC_3', 'SOC_3_NAME', 'SOC_4', 'SOC_4_NAME', 'SOC_5', 'SOC_5_NAME', 'LIGHTCAST_SECTORS', 'LIGHTCAST_SECTORS_NAME', 'NAICS_2022_2', 'NAICS_2022_2_NAME', 'NAICS_2022_3', 'NAICS_2022_3_NAME', 'NAICS_2022_4', 'NAICS_2022_4_NAME', 'NAICS_2022_5', 'NAICS_2022_5_NAME', 'NAICS_2022_6', 'NAICS_2022_6_NAME']\n['ID', 'LAST_UPDATED_DATE', 'LAST_UPDATED_TIMESTAMP', 'DUPLICATES', 'POSTED', 'EXPIRED', 'DURATION', 'SOURCE_TYPES', 'SOURCES', 'URL', 'ACTIVE_URLS', 'ACTIVE_SOURCES_INFO', 'TITLE_RAW', 'BODY', 'MODELED_EXPIRED', 'MODELED_DURATION', 'COMPANY', 'COMPANY_NAME', 'COMPANY_RAW', 'COMPANY_IS_STAFFING', 'EDUCATION_LEVELS', 'EDUCATION_LEVELS_NAME', 'MIN_EDULEVELS', 'MIN_EDULEVELS_NAME', 'MAX_EDULEVELS', 'MAX_EDULEVELS_NAME', 'EMPLOYMENT_TYPE', 'EMPLOYMENT_TYPE_NAME', 'MIN_YEARS_EXPERIENCE', 'MAX_YEARS_EXPERIENCE', 'IS_INTERNSHIP', 'SALARY', 'REMOTE_TYPE', 'REMOTE_TYPE_NAME', 'ORIGINAL_PAY_PERIOD', 'SALARY_TO', 'SALARY_FROM', 'LOCATION', 'CITY', 'CITY_NAME', 'COUNTY', 'COUNTY_NAME', 'MSA', 'MSA_NAME', 'STATE', 'STATE_NAME', 'COUNTY_OUTGOING', 'COUNTY_NAME_OUTGOING', 'COUNTY_INCOMING', 'COUNTY_NAME_INCOMING', 'MSA_OUTGOING', 'MSA_NAME_OUTGOING', 'MSA_INCOMING', 'MSA_NAME_INCOMING', 'NAICS2', 'NAICS2_NAME', 'NAICS3', 'NAICS3_NAME', 'NAICS4', 'NAICS4_NAME', 'NAICS5', 'NAICS5_NAME', 'NAICS6', 'NAICS6_NAME', 'TITLE', 'TITLE_NAME', 'TITLE_CLEAN', 'SKILLS', 'SKILLS_NAME', 'SPECIALIZED_SKILLS', 'SPECIALIZED_SKILLS_NAME', 'CERTIFICATIONS', 'CERTIFICATIONS_NAME', 'COMMON_SKILLS', 'COMMON_SKILLS_NAME', 'SOFTWARE_SKILLS', 'SOFTWARE_SKILLS_NAME', 'ONET', 'ONET_NAME', 'ONET_2019', 'ONET_2019_NAME', 'CIP6', 'CIP6_NAME', 'CIP4', 'CIP4_NAME', 'CIP2', 'CIP2_NAME', 'SOC_2021_2', 'SOC_2021_2_NAME', 'SOC_2021_3', 'SOC_2021_3_NAME', 'SOC_2021_4', 'SOC_2021_4_NAME', 'SOC_2021_5', 'SOC_2021_5_NAME', 'LOT_CAREER_AREA', 'LOT_CAREER_AREA_NAME', 'LOT_OCCUPATION', 'LOT_OCCUPATION_NAME', 'LOT_SPECIALIZED_OCCUPATION', 'LOT_SPECIALIZED_OCCUPATION_NAME', 'LOT_OCCUPATION_GROUP', 'LOT_OCCUPATION_GROUP_NAME', 'LOT_V6_SPECIALIZED_OCCUPATION', 'LOT_V6_SPECIALIZED_OCCUPATION_NAME', 'LOT_V6_OCCUPATION', 'LOT_V6_OCCUPATION_NAME', 'LOT_V6_OCCUPATION_GROUP', 'LOT_V6_OCCUPATION_GROUP_NAME', 'LOT_V6_CAREER_AREA', 'LOT_V6_CAREER_AREA_NAME', 'SOC_2', 'SOC_2_NAME', 'SOC_3', 'SOC_3_NAME', 'SOC_4', 'SOC_4_NAME', 'SOC_5', 'SOC_5_NAME', 'LIGHTCAST_SECTORS', 'LIGHTCAST_SECTORS_NAME', 'NAICS_2022_2', 'NAICS_2022_2_NAME', 'NAICS_2022_3', 'NAICS_2022_3_NAME', 'NAICS_2022_4', 'NAICS_2022_4_NAME', 'NAICS_2022_5', 'NAICS_2022_5_NAME', 'NAICS_2022_6', 'NAICS_2022_6_NAME']\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Create AI vs Non-AI flag\ndata['is_ai_job'] = data['TITLE_NAME'].str.contains('AI|Artificial Intelligence|Machine Learning|Data Scientist|ML|Deep Learning', case=False, na=False)\n\n# Compare average salary\nplt.figure(figsize=(8, 5))\nsns.boxplot(x='is_ai_job', y='SALARY_FROM', data=data)\nplt.title('Salary Comparison: AI vs Non-AI Jobs')\nplt.xlabel('Is AI Job?')\nplt.ylabel('Salary From')\nplt.grid(True)\nplt.show()"
  },
  {
    "objectID": "eda.html#top-paying-regions-for-ai-vs-non-ai",
    "href": "eda.html#top-paying-regions-for-ai-vs-non-ai",
    "title": "1. AI vs. Non-AI Salary Comparison",
    "section": "2. Top Paying Regions (for AI vs Non-AI)",
    "text": "2. Top Paying Regions (for AI vs Non-AI)\n\n# Group by state and AI job status\nregion_salary = data.groupby(['STATE_NAME', 'is_ai_job'])['SALARY_FROM'].mean().reset_index()\n\n# Pivot for heatmap\npivot_data = region_salary.pivot(index='STATE_NAME', columns='is_ai_job', values='SALARY_FROM')\n\n# Heatmap\nplt.figure(figsize=(12, 8))\nsns.heatmap(pivot_data, annot=True, fmt='.0f', cmap='coolwarm')\nplt.title('Average Salary by State: AI vs Non-AI')\nplt.xlabel('Is AI Job?')\nplt.ylabel('State')\nplt.show()"
  },
  {
    "objectID": "eda.html#remote-vs-in-office-salary-comparison",
    "href": "eda.html#remote-vs-in-office-salary-comparison",
    "title": "1. AI vs. Non-AI Salary Comparison",
    "section": "3. Remote vs In-Office Salary Comparison",
    "text": "3. Remote vs In-Office Salary Comparison\n\n# Remove NaN remote types\nremote_salary = data.dropna(subset=['REMOTE_TYPE_NAME'])\n\nplt.figure(figsize=(8, 5))\nsns.boxplot(x='REMOTE_TYPE_NAME', y='SALARY_FROM', data=remote_salary)\nplt.title('Remote vs In-Office Salary Comparison')\nplt.xlabel('Work Type')\nplt.ylabel('Salary From')\nplt.xticks(rotation=45)\nplt.grid(True)\nplt.show()"
  },
  {
    "objectID": "eda.html#industry-salary-trends-2023-vs-2024",
    "href": "eda.html#industry-salary-trends-2023-vs-2024",
    "title": "1. AI vs. Non-AI Salary Comparison",
    "section": "4. Industry Salary Trends (2023 vs 2024)",
    "text": "4. Industry Salary Trends (2023 vs 2024)\n\n# Convert POSTED to datetime and extract year\ndata['POSTED'] = pd.to_datetime(data['POSTED'], errors='coerce')\ndata['year'] = data['POSTED'].dt.year\n\n# Filter only 2023 and 2024\nsalary_trend = data[data['year'].isin([2023, 2024])]\n\n# Group by industry and year\nindustry_salary = salary_trend.groupby(['NAICS2_NAME', 'year'])['SALARY_FROM'].mean().reset_index()\n\n# Plot\nplt.figure(figsize=(12, 6))\nsns.lineplot(data=industry_salary, x='year', y='SALARY_FROM', hue='NAICS2_NAME', marker='o')\nplt.title('Industry Salary Trends (2023 vs 2024)')\nplt.xlabel('Year')\nplt.ylabel('Average Salary From')\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\nplt.grid(True)\nplt.tight_layout()\nplt.show()"
  },
  {
    "objectID": "eda.html#to-cleanfilter-the-salary-ranges",
    "href": "eda.html#to-cleanfilter-the-salary-ranges",
    "title": "1. AI vs. Non-AI Salary Comparison",
    "section": "To clean/filter the salary ranges",
    "text": "To clean/filter the salary ranges\n\n# Filter out rows with null salary\nsalary_clean = data[data['SALARY_FROM'].notnull()]\n\n# Calculate IQR\nQ1 = salary_clean['SALARY_FROM'].quantile(0.25)\nQ3 = salary_clean['SALARY_FROM'].quantile(0.75)\nIQR = Q3 - Q1\n\n# Define outlier bounds\nlower_bound = Q1 - 1.5 * IQR\nupper_bound = Q3 + 1.5 * IQR\n\n# Filter out outliers\nsalary_filtered = salary_clean[(salary_clean['SALARY_FROM'] &gt;= lower_bound) & (salary_clean['SALARY_FROM'] &lt;= upper_bound)]\n\nprint(f\"Original rows: {len(salary_clean)}\")\nprint(f\"Filtered rows (no outliers): {len(salary_filtered)}\")\n\nOriginal rows: 32408\nFiltered rows (no outliers): 31961\n\n\n\n# AI vs Non-AI plot after outlier removal\nplt.figure(figsize=(8, 5))\nsns.boxplot(x='is_ai_job', y='SALARY_FROM', data=salary_filtered)\nplt.title('Cleaned Salary Comparison: AI vs Non-AI Jobs')\nplt.xlabel('Is AI Job?')\nplt.ylabel('Salary From')\nplt.grid(True)\nplt.show()"
  },
  {
    "objectID": "eda.html#top-paying-regions-cleaned-dataset",
    "href": "eda.html#top-paying-regions-cleaned-dataset",
    "title": "1. AI vs. Non-AI Salary Comparison",
    "section": "Top Paying Regions (Cleaned Dataset)",
    "text": "Top Paying Regions (Cleaned Dataset)\n\n# Group by STATE_NAME and is_ai_job using filtered dataset\nregion_salary_clean = salary_filtered.groupby(['STATE_NAME', 'is_ai_job'])['SALARY_FROM'].mean().reset_index()\n\n# Pivot for heatmap: rows = states, columns = AI/Non-AI\npivot_region_clean = region_salary_clean.pivot(index='STATE_NAME', columns='is_ai_job', values='SALARY_FROM')\n\n# Heatmap of average salaries\nplt.figure(figsize=(12, 8))\nsns.heatmap(pivot_region_clean, annot=True, fmt='.0f', cmap='coolwarm', linewidths=0.5)\nplt.title('Top Paying Regions: AI vs Non-AI Jobs (Cleaned Data)')\nplt.xlabel('Is AI Job?')\nplt.ylabel('State')\nplt.tight_layout()\nplt.show()"
  },
  {
    "objectID": "eda.html#remote-vs-in-office-salary-cleaned-dataset",
    "href": "eda.html#remote-vs-in-office-salary-cleaned-dataset",
    "title": "1. AI vs. Non-AI Salary Comparison",
    "section": "Remote vs In-Office Salary (Cleaned Dataset)",
    "text": "Remote vs In-Office Salary (Cleaned Dataset)\n\n# Drop rows with missing remote type info\nremote_clean = salary_filtered.dropna(subset=['REMOTE_TYPE_NAME'])\n\n# Plot salary comparison\nplt.figure(figsize=(8, 5))\nsns.boxplot(x='REMOTE_TYPE_NAME', y='SALARY_FROM', data=remote_clean)\nplt.title('Remote vs In-Office Salary Comparison (Cleaned Data)')\nplt.xlabel('Work Type')\nplt.ylabel('Salary From')\nplt.xticks(rotation=45)\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n\n\n\n\n\n\n\n\n\n# the average salary by type \nremote_avg = remote_clean.groupby('REMOTE_TYPE_NAME')['SALARY_FROM'].mean().sort_values(ascending=False)\nprint(remote_avg)\n\nREMOTE_TYPE_NAME\nRemote           96448.291407\nHybrid Remote    92644.764242\n[None]           91018.110741\nNot Remote       79461.976115\nName: SALARY_FROM, dtype: float64"
  },
  {
    "objectID": "eda.html#industry-salary-trends-cleaned-dataset",
    "href": "eda.html#industry-salary-trends-cleaned-dataset",
    "title": "1. AI vs. Non-AI Salary Comparison",
    "section": "Industry Salary Trends (Cleaned Dataset)",
    "text": "Industry Salary Trends (Cleaned Dataset)\n\n# Make sure 'POSTED' is in datetime format\nsalary_filtered['POSTED'] = pd.to_datetime(salary_filtered['POSTED'], errors='coerce')\n\n# Extract year\nsalary_filtered['year'] = salary_filtered['POSTED'].dt.year\n\n# Filter only 2023 and 2024\nindustry_clean = salary_filtered[salary_filtered['year'].isin([2023, 2024])]\n\n# Group by industry and year to calculate average salary\nindustry_salary_trend = industry_clean.groupby(['NAICS2_NAME', 'year'])['SALARY_FROM'].mean().reset_index()\n\n# Plot line chart of industry salary trends\nplt.figure(figsize=(12, 6))\nsns.lineplot(data=industry_salary_trend, x='year', y='SALARY_FROM', hue='NAICS2_NAME', marker='o')\nplt.title('Industry Salary Trends (2023 vs 2024) - Cleaned Data')\nplt.xlabel('Year')\nplt.ylabel('Average Salary From')\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\nplt.grid(True)\nplt.tight_layout()\nplt.show()\n\nC:\\Users\\pooja\\AppData\\Local\\Temp\\ipykernel_32392\\1923549133.py:2: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  salary_filtered['POSTED'] = pd.to_datetime(salary_filtered['POSTED'], errors='coerce')\nC:\\Users\\pooja\\AppData\\Local\\Temp\\ipykernel_32392\\1923549133.py:5: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  salary_filtered['year'] = salary_filtered['POSTED'].dt.year\n\n\n\n\n\n\n\n\n\n\ntop_industries = industry_salary_trend[industry_salary_trend['year'] == 2024] \\\n    .nlargest(10, 'SALARY_FROM')['NAICS2_NAME'].tolist()\n\ntop_trend_data = industry_salary_trend[industry_salary_trend['NAICS2_NAME'].isin(top_industries)]\n\n# Re-plot for top industries only\nplt.figure(figsize=(12, 6))\nsns.lineplot(data=top_trend_data, x='year', y='SALARY_FROM', hue='NAICS2_NAME', marker='o')\nplt.title('Top 10 Industry Salary Trends (2023 vs 2024)')\nplt.xlabel('Year')\nplt.ylabel('Average Salary From')\nplt.legend(bbox_to_anchor=(1.05, 1), loc='upper left')\nplt.grid(True)\nplt.tight_layout()\nplt.show()"
  },
  {
    "objectID": "skill_gap_analysis.html",
    "href": "skill_gap_analysis.html",
    "title": "Creating a Skill Level DataFrame",
    "section": "",
    "text": "import pandas as pd\n\nskills_data = {\n    \"Name\": [\"Alice\", \"Bob\", \"Charlie\", \"David\"],\n    \"Python\": [5, 3, 4, 2],\n    \"SQL\": [4, 2, 5, 3],\n    \"Machine Learning\": [3, 1, 4, 2],\n    \"Cloud Computing\": [2, 2, 3, 1]\n}\n\ndf_skills = pd.DataFrame(skills_data)\ndf_skills.set_index(\"Name\", inplace=True)\ndf_skills\n\n\n\n\n\n\n\n\nPython\nSQL\nMachine Learning\nCloud Computing\n\n\nName\n\n\n\n\n\n\n\n\nAlice\n5\n4\n3\n2\n\n\nBob\n3\n2\n1\n2\n\n\nCharlie\n4\n5\n4\n3\n\n\nDavid\n2\n3\n2\n1\n\n\n\n\n\n\n\n\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\nplt.figure(figsize=(8, 5))\nsns.heatmap(df_skills, annot=True, cmap=\"YlGnBu\", cbar=True)\nplt.title(\"Team Skill Matrix\")\nplt.show()\n\n\n\n\n\n\n\n\n\nCompare Team Skills to Industry Requirements\n\nfrom collections import Counter\n\n# Step 1: Define top industry skills\ntop_skills = [\"Python\", \"SQL\", \"Machine Learning\", \"Cloud Computing\", \"Docker\", \"AWS\"]\n\n# Step 2: Compare with team skills and fill gaps\nfor skill in top_skills:\n    if skill not in df_skills.columns:\n        df_skills[skill] = 0  # Add missing skill column with 0s\n\n# Step 3: Re-visualize with added skill columns\nplt.figure(figsize=(10, 6))\nsns.heatmap(df_skills[top_skills], annot=True, cmap=\"YlGnBu\", linewidths=0.5)\nplt.title(\"Skill Gap Analysis: Team vs Industry\")\nplt.show()\n\n\n\n\n\n\n\n\n\n\nPropose an Improvement Plan\n\n# Step 1: Filter skill gaps (score ≤ 2)\nskill_gaps = df_skills[top_skills] &lt;= 2\n\n# Step 2: Print suggestions\nfor name in df_skills.index:\n    for skill in top_skills:\n        if skill_gaps.loc[name, skill]:\n            print(f\"{name} should improve their skill in: {skill}\")\n\nAlice should improve their skill in: Cloud Computing\nAlice should improve their skill in: Docker\nAlice should improve their skill in: AWS\nBob should improve their skill in: SQL\nBob should improve their skill in: Machine Learning\nBob should improve their skill in: Cloud Computing\nBob should improve their skill in: Docker\nBob should improve their skill in: AWS\nCharlie should improve their skill in: Docker\nCharlie should improve their skill in: AWS\nDavid should improve their skill in: Python\nDavid should improve their skill in: Machine Learning\nDavid should improve their skill in: Cloud Computing\nDavid should improve their skill in: Docker\nDavid should improve their skill in: AWS"
  }
]